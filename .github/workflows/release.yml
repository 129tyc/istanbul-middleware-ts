name: Release and Publish

on:
  push:
    tags:
      - "v*" # Trigger when pushing tags starting with v, e.g. v1.0.0
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Run tests (if any)
        run: npm test --if-present

      - name: Test server startup
        run: |
          timeout 10s npm run test-server || true
          echo "Server startup test completed"

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check package contents
        run: npm pack --dry-run

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    needs: publish-npm
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Features" >> $GITHUB_OUTPUT
          echo "- Istanbul Middleware TypeScript implementation" >> $GITHUB_OUTPUT
          echo "- Complete TypeScript support with type definitions" >> $GITHUB_OUTPUT
          echo "- Express.js integration" >> $GITHUB_OUTPUT
          echo "- Coverage reporting and download functionality" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Installation" >> $GITHUB_OUTPUT
          echo "\`\`\`bash" >> $GITHUB_OUTPUT
          echo "npm install istanbul-middleware-ts" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Usage" >> $GITHUB_OUTPUT
          echo "\`\`\`typescript" >> $GITHUB_OUTPUT
          echo "import { createHandler } from 'istanbul-middleware-ts';" >> $GITHUB_OUTPUT
          echo "app.use('/coverage', createHandler());" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "For detailed documentation, see [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
